"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

from pathlib import Path
#import logging
import ssl
#import ldap
#from django_auth_ldap.config import LDAPSearch
#from django_auth_ldap.config import GroupOfUniqueNamesType

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'abcdefghijklmnopqrstuvwsyz1234567890abcdefghijklmn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'parasight',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    # PostgreSQL
    'default' : {
        'ENGINE'   : 'django.db.backends.postgresql_psycopg2',
        'NAME'     : '{{ parasight_db_name }}',
        'USER'     : '{{ parasight_db_user }}',
        'PASSWORD' : '{{ parasight_db_passwd }}',
        'HOST'     : 'localhost', # Empty for domain socket
        'PORT'     : '5432', # Empty for default
        'SSLMODE'  : 'require',
    }
}


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


CELERY_BROKER_URL                = 'amqps://{{ parasight_rabbitmq_user }}:{{ parasight_rabbitmq_passwd }}@localhost:5671{{ parasight_rabbitmq_vhost }}'
CELERY_BROKER_USE_SSL = {
    #'keyfile'       : '/var/ssl/private/worker-key.pem',
    #'certfile'      : '/var/ssl/amqp-server-cert.pem',
    #'ca_certs'      : '/var/ssl/myca.pem',
    'cert_reqs'     : ssl.CERT_NONE,
    'ssl_version'   : ssl.PROTOCOL_TLSv1_2,
}


CELERY_ACCEPT_CONTENT                = ['json']
CELERY_TASK_SERIALIZER               = 'json'
CELERY_RESULT_SERIALIZER             = 'json'
CELERY_RESULT_PERSISTENT             = True
#CELERY_RESULT_BACKEND                = 'db+postgresql://{{ parasight_db_user }}:{{ parasight_db_passwd }}@/{{ parasight_db_name }}'  # sockets
CELERY_RESULT_BACKEND                = 'db+postgresql://{{ parasight_db_user }}:{{ parasight_db_passwd }}@localhost:5432/{{ parasight_db_name }}?sslmode=require'  # network
CELERY_TASK_TRACK_STARTED            = True
CELERY_WORKER_DISABLE_RATE_LIMITS    = True
CELERY_RESULT_EXPIRES                = 864000   #results expire in 10 days
#CELERY_TASK_SOFT_TIME_LIMIT          = 1200     #tasks limited to 20 minute runtime
CELERY_WORKER_MAX_TASKS_PER_CHILD    = 10       #max tasks before a process is replaced
CELERY_BEAT_SCHEDULE = {
}


AUTHENTICATION_BACKENDS = (
    #'django_auth_ldap.backend.LDAPBackend',  # comment out to disable ldap auth
    'django.contrib.auth.backends.ModelBackend',
)

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#AUTH_LDAP_SERVER_URI    = 'ldaps://ldap.foobar.com/'
#AUTH_LDAP_USER_SEARCH   = LDAPSearch('o=foobar.com', ldap.SCOPE_SUBTREE, '(mail=%(user)s)')
#AUTH_LDAP_USER_ATTR_MAP = {
#    'first_name' : 'givenName',
#    'last_name'  : 'sn',
#    'email'      : 'mail',
#}

#AUTH_LDAP_GROUP_SEARCH  = LDAPSearch('o=foobar.com', ldap.SCOPE_SUBTREE, '(objectClass=groupOfUniqueNames)')
#AUTH_LDAP_GROUP_TYPE = GroupOfUniqueNamesType(name_attr="cn")
#AUTH_LDAP_REQUIRE_GROUP = 'cn=Parasight Staff,ou=Groups,o=foobar.com'
#AUTH_LDAP_USER_FLAGS_BY_GROUP = {
#    #'is_active'    : 'cn=active,ou=django,ou=groups,dc=example,dc=com',
#    'is_staff'     : 'cn=Parasight Staff,ou=Groups,o=foobar.com',
#    'is_superuser' : 'cn=Parasight,ou=Groups,o=foobar.com',
#}

#AUTH_LDAP_ALWAYS_UPDATE_USER  = True
#AUTH_LDAP_FIND_GROUP_PERMS    = False
#AUTH_LDAP_MIRROR_GROUPS       = False
##AUTH_LDAP_CACHE_TIMEOUT       = 3600

#AUTH_LDAP_CONNECTION_OPTIONS = {
#    ldap.OPT_X_TLS_REQUIRE_CERT : 0,
#    ldap.OPT_TIMELIMIT          : 20,
#    ldap.OPT_DEBUG_LEVEL        : 1,
#}


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


#ldap_logger = logging.getLogger('django_auth_ldap')
#ldap_logger.addHandler(logging.StreamHandler())
#ldap_logger.setLevel(logging.INFO)

LOGGING = {
    'version' : 1,
    'disable_existing_loggers' : False,
    'formatters' : {
        'verbose' : {
            'format' : '%(asctime)s [%(levelname)s] %(name)s %(funcName)s() @%(process)d.%(thread)d: %(message)s',
        },
        'simple' : {
            'format' : '[%(levelname)s] %(name)s %(funcName)s() @%(process)d: %(message)s',
        },
        'django' : {
            'format' : '[%(asctime)s: %(levelname)s/%(module)s.%(funcName)s()] %(message)s',
        },
        'syslog' : {
            'format' : 'magnum: %(message)s',
        },
    },
    'handlers' : {
        'console' : {
            'level'     : 'INFO',
            'class'     : 'logging.StreamHandler',
            'formatter' : 'django',
        },
        'syslog' : {
            'level'     : 'INFO',
            'class'     : 'logging.handlers.SysLogHandler',
            'formatter' : 'syslog',
            'address'   : ('/dev/log'),
            'facility'  : 'local6',
        },
    },
    'loggers' : {
        'django' : {
            'handlers'  : ['syslog'],
            'propagate' : True,
            'level'     : 'DEBUG',
        },
        'django.db.backends' : {
            'handlers'  : ['syslog'],
            'level'     : 'WARN',
        },
        'mysite' : {
            'handlers'  : ['syslog'],
            'level'     : 'INFO',
        },
        #'django_auth_ldap' : {
        #    'handlers'  : ['syslog'],
        #    'level'     : 'INFO',
        #},
        'parasight.models' : {
            'handlers'  : ['syslog'],
            'level'     : 'INFO',
        },
        'parasight.tasks' : {
            'handlers'  : ['syslog'],
            'level'     : 'INFO',
        },
    },
}




